import{j as e}from"./index-DxwTce4T.js";import{P as t,A as o,C as s,S as c}from"./Summary-Cl7lBqgi.js";function m(){const n="A palindrome number is an integer that reads the same backward as forward. For instance, 121 is a palindrome because reversing it yields the same number, whereas 123 is not because its reverse is 321. The task is to determine whether a given integer x is a palindrome without converting the number to a string.",l=`class Solution:
    def isPalindrome(self, x: int) -> bool:`,r=`        if x < 0:
            return False
        if x != 0 and x % 10 == 0:
            return False`,i=`        reversed_half = 0
        while x > reversed_half:
            reversed_half = reversed_half * 10 + x % 10
            x //= 10`,a="      return x == reversed_half or x == reversed_half // 10";return e.jsxs("div",{className:"writeup-wrapper",children:[e.jsx(t,{definition:n}),e.jsx(o,{}),e.jsx(s,{language:"python",codeString:r}),e.jsxs("p",{className:"writeup-p",children:["If ",e.jsx("span",{class:"writeup-colored-bg",children:"x"})," is negative,  it's not a palindrome because the negative sign appears only at the start, not at the end."]}),e.jsx("p",{className:"writeup-p",children:"if x â‰  0 and ends with 0(i.e., x % 10 == 0), it cannot be a palindrome. For instance, 10 reversed is 01, which is not valid."}),e.jsx("p",{className:"writeup-p",children:e.jsx("b",{children:"Reversing Half of the Number"})}),e.jsx(s,{language:"python",codeString:i}),e.jsxs("p",{className:"writeup-p",children:["The goal here is to reverse only half of the digits of ",e.jsx("span",{class:"writeup-colored-bg",children:"x"})," rather than the entire number. This reduces the computational effort."]}),e.jsxs("p",{className:"writeup-p",children:["The variable ",e.jsx("span",{class:"writeup-colored-bg",children:"reversed_half"})," starts at 0. In each iteration:"]}),e.jsxs("ul",{children:[e.jsxs("li",{className:"writeup-p",children:["Add the last digit of ",e.jsx("span",{className:"writeup-colored-bg",children:"x"}),"(obtained via x % 10) to ",e.jsx("span",{className:"writeup-colored-bg",children:"reversed_half"})," shifting its digits to the left by multiplying by 10."]}),e.jsxs("li",{className:"writeup-p",children:["Remove he last digit from ",e.jsx("span",{className:"writeup-colored-bg",children:"x"}),"  using integer division x //= 10"]})]}),e.jsxs("p",{className:"writeup-p",children:["The loop runs until the original number x becomes less than or equal to ",e.jsx("span",{className:"writeup-colored-bg",children:"reversed_half"})]}),e.jsx("p",{className:"writeup-p",children:e.jsx("b",{children:"Checking for Palindrome"})}),e.jsx(s,{language:"python",codeString:a}),e.jsxs("p",{className:"writeup-p",children:["After the loop ",e.jsx("span",{className:"writeup-colored-bg",children:"x"})," represents the first half of the number, and ",e.jsx("span",{className:"writeup-colored-bg",children:"reversed_half"})," represents the reversed second half."]}),e.jsx("p",{className:"writeup-p",children:"For even-length numbers (e.g., 1221):"}),e.jsx("ul",{children:e.jsxs("li",{className:"writeup-p",children:[e.jsx("span",{className:"writeup-colored-bg",children:"x == reversed_half"})," (the two halves are directly compared)"]})}),e.jsx("p",{className:"writeup-p",children:"For odd-length numbers (e.g., 12321):"}),e.jsx("ul",{children:e.jsxs("li",{className:"writeup-p",children:["The middle digit does not affect palindromicity. Dividing ",e.jsx("span",{className:"writeup-colored-bg",children:"x == reversed_half"})," by 10 removes it, allowing ",e.jsx("span",{className:"writeup-colored-bg",children:"x == reversed_half // 10"})]})}),e.jsx("p",{className:"writeup-p",children:e.jsx("b",{children:"Time and Space Complexity"})}),e.jsxs("ul",{children:[e.jsxs("li",{className:"writeup-p",children:[e.jsx("b",{children:"Time Complexity"}),": ",e.jsxs("i",{children:["O(log",e.jsx("sub",{children:"10"}),"(n))"]}),", because the loop runs approximately half the number of  digits in x. The number of digits is proportional to log",e.jsx("sub",{children:"10"}),"(n)"]}),e.jsx("br",{}),e.jsxs("li",{className:"writeup-p",children:[e.jsx("b",{children:"Space Complexity"}),": ",e.jsx("i",{children:"O(1)"}),". Only two variables (",e.jsx("span",{class:"writeup-colored-bg",children:"x"})," and ",e.jsx("span",{class:"writeup-colored-bg",children:"reversed_half"}),") are used, making it space-efficient."]})]}),e.jsx(c,{summary:"This implementation efficiently determines if an integer is a palindrome by reversing only half of the number. It avoids the need for converting the integer to a string, making it suitable for scenarios where low memory usage and fast execution are critical."}),e.jsx(s,{language:"python",codeString:l+`

`+r+`

`+i+`

  `+a})]})}export{m as default};
